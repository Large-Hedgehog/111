-- 5/15
-- 가장 나중에 가입한 고객의 pk, 이름, 성 출력하시오
SELECT customer_id, first_name, last_name
FROM customer
WHERE customer_id = (
	select max(customer_id) FROM customer)
;


-- 도시  id, 도시명 > India(인도) 나라가 아닌 나라들의 도시id, 도시명
SELECT city_id, city
FROM city 
WHERE country_id != (
	SELECT country_id FROM country WHERE country = 'India' )
;

-- 도시  id, 도시명 > India(인도) 나라가 아닌 나라들의 도시id, 도시명
-- 조인으로

SELECT A.city_id, A.city
FROM city A
INNER JOIN(
	SELECT country_id
	FROM country
	WHERE country = 'India'
) B
ON A.country_id != B.country_id;


-- Canada, Mexico의 도시 id, 도시명 출력 
SELECT city_id, city
FROM city
WHERE country_id IN (
	SELECT country_id FROM country
	WHERE country IN ('Canada','Mexico'))
;


-- all연산자
SELECT *
FROM customer
WHERE customer_id != ALL (
	SELECT customer_id
	FROM payment
	WHERE amount = 0
);

-- United States, Mexico, Canada에 거주하는 소비자 의 렌탈횟수보다 많이
-- 렌탈한 사람들의 고객 id, 횟수
-- all은 모든 걸 만족해야한다 

SELECT customer_id, COUNT(customer_id)
FROM rental
GROUP BY customer_id
HAVING COUNT(customer_id) > ALL(
	SELECT COUNT(customer_id)
	FROM rental
	WHERE customer_id IN(
	SELECT customer_id FROM customer
	WHERE address_id IN(
		SELECT address_id FROM address
		WHERE city_id IN(
			SELECT city_id FROM city
			WHERE country_id IN (
				SELECT country_id FROM country
				WHERE country IN ('United States', 'Mexico', 'Canada')
				)
			)
		)
	)
	GROUP BY customer_id
)
; 


-- 배우 성이 'MONROE'인 사람이 'PG'영화등급에 출연했다.
-- 배우 id와 영화 id

SELECT A.actor_id, C.film_id
FROM actor A
INNER JOIN film_actor B
ON A.actor_id = B.actor_id
INNER JOIN film C
ON B.film_id = C.film_id
WHERE A.last_name = 'MONROE'
AND C.rating = 'PG';

-- 성이 'MONROE'로 끝나는 사람 찾기
-- 다중 열 서브쿼리 
SELECT * FROM actor
WHERE(FIRST_name, last_name) IN
	(
		SELECT first_name, last_name
		FROM actor
		WHERE last_name = 'MONROE'
		
		);
		
		
-- case 문

SELECT customer_id,  active	,
	CASE
		WHEN active = 1
		THEN '활성화'
		ELSE '비활성화'
	end active_str
	, if(active = 1, '활성화', '비활성화') active_str2
FROM customer;


-- PG, G 전체이용, NC-17 17세 이상, PG-13 13세 이상, R은 청소년관람불가 
SELECT * ,
	CASE 	WHEN rating IN ('PG', 'G') THEN '전체이용'
			WHEN rating = 'NC-17' THEN '17세 이상'
			WHEN rating = 'PG-13' THEN '13세 이상'
			ELSE '청소년관람불가'
	END rating_str
from film;


-- first_name \ last_name \ num_rentals (active = 0>0)

SELECT first_name, last_name, 
	CASE active	
	WHEN '0' THEN '0'
			ELSE
				(SELECT COUNT(*) FROM rental
				WHERE rental.customer_id = customer.customer_id
				)
			END num_rentals
		FROM customer;
		
		
--


SELECT first_name, last_name, 
	if(A.active = '0', '0', COUNT(B.rental_id)) num_rentals
FROM customer A
INNER JOIN rental B
ON A.customer_id = B.customer_id
GROUP BY A.customer_id 
;


-- rental테이블에서 2005-05~08월 각 달의 렌탈 수
SELECT date_format(rental_date, '%Y-%m') mon, COUNT(rental_date) cnt
FROM rental
WHERE DATE_FORMAT(rental_date, '%Y-%m') BETWEEN '2005-05' AND '2005-07'
GROUP BY mon
;


-- 화면단, 자바단, DB단 > MVC 패턴
-- M : model
-- V : View
-- C : controller > java

SELECT
	SUM(
		case DATE_FORMAT(rental_date, '%Y-%m') WHEN '2005-05' THEN 1 ELSE 0 END) may_rentals
	, SUM(	
		case DATE_FORMAT(rental_date, '%Y-%m') WHEN '2005-06' THEN 1 ELSE 0 END) june_rentals
	, SUM(
		case DATE_FORMAT(rental_date, '%Y-%m') WHEN '2005-07' THEN 1 ELSE 0 END) july_rentals
	FROM rental
	WHERE DATE_FORMAT(rental_date, '%Y-%m') BETWEEN '2005-05' AND '2005-07';
	
	
SET autocommit = 0;
