// MariaDB 학습 


SELECT *
FROM film
WHERE (rating = 'G' AND rental_duration >= 7);


-- select 순서 
-- select from where group having order-by limit
/*등급이 G면서 빌릴 수 있는 기간이 7일 이상인 레코드*/


/*등급이 G면서 빌릴 수 있는 기간이 7일 이상인 레코드*/
-- 혹은 등급이 PG-13이면서 빌릴 수 있는 기간이 4일 미만인 레코드 
-- 모든 레코드, 컬럼은 제목, 등급, 빌릴 수 있는 기간 3개만 

SELECT title, rating, rental_duration
FROM film
WHERE (rating = 'G' AND rental_duration >= 7) OR (rating = 'PG-13' AND rental_duration < 4);


--

-- group function 그룹함수
-- sum, avg, min, max, count

-- group by
SELECT * FROM customer;

SELECT COUNT(*), SUM(active)
, COUNT(*)-SUM(active) 
, MAX(address_id)
, MIN(address_id)
, ceil(AVG(address_id))
FROM customer;

SELECT store_id, COUNT(*)
FROM customer 
GROUP BY store_id;


SELECT store_id, COUNT(*)
FROM customer 
GROUP BY store_id
HAVING COUNT(*) >= 300;

-- count 값이 300이상인 그룹들만 나오게 함
-- 모든 배우의 배우 id, 이름 및 성을 검색합니다
-- 성 기준으로 정렬한 다음 이름 기준으로 정렬합니다



-- 3.8.1
SELECT actor_id, first_name, last_name
FROM actor
ORDER BY last_name, first_name;

-- 3.8.2
SELECT actor_id, first_name, last_name
FROM actor
WHERE last_name = 'WILLIAMS' OR last_name = 'DAVIS';


-- 3.8.3
-- date()함수로 시간 요소를 무시 
-- DB는 문자열 비교할 수 있음
-- distinct 중복제거 
SELECT distinct customer_id
FROM rental
WHERE DATE(rental_date) = '2005-07-05'
ORDER BY customer_id;


-- 3.8.4
SELECT c.email, r.return_date
FROM customer c
INNER JOIN rental r
ON c.customer_id = r.customer_id
WHERE DATE(r.rental_date) = '2005-06-14'
ORDER BY r.return_date DESC ;


SELECT * FROM customer
WHERE first_name = 'STEVEN'
AND create_date > '2006-01-01';

-- 이름은 STEVEN이고, 생성 날짜는 2006년 1월 1일 또는 그 이전

SELECT * FROM customer
WHERE first_name = 'STEVEN'
AND create_date <= '2006-01-01';

-- 이름은 STEVEN이 아니고, 생성 날짜는 2006년 1월 1일 이후

SELECT * FROM customer
WHERE first_name != 'STEVEN'
AND create_date > '2006-01-01';

-- 이름은 STEVEN이 아니거나 성이 'YOUNG'인 사람 중에 
-- 생성일자가 2006년 1월 1일 이후

SELECT * FROM customer
WHERE (first_name != 'STEVEN' OR last_name = 'YOUNG')
AND create_date > '2006-01-01';


-- 이름은 STEVEN이 아니거나 성이 'YOUNG'인 사람 중에
-- 생성날짜가 2006년 1월 1일 이후인 사람들

SELECT * FROM customer
WHERE (first_name != 'STEVEN' OR last_name != 'YOUNG')
AND create_date > '2006-01-01';


-- film_id : 762 , 대여기간보다 짧은 영화만 알고 싶다
SELECT * FROM film
WHERE rental_duration < (SELECT rental_duration
									FROM film
									WHERE film_id = 762);

SELECT 6;

SELECT rental_duration
FROM film
WHERE film_id = 762;


-- 2005년 6월 14일에 렌탈을 한 사람들의 이메일

SELECT * FROM rental;


SELECT distinct c.email
FROM customer c
INNER JOIN rental r
ON c.customer_id = r.customer_id
WHERE DATE(r.rental_date) = '2005-06-14'
ORDER BY c.email ;


-- 렌탈 정보, 2005년과 2004년을 제외한 렌탈 정보

SELECT * FROM rental
WHERE (YEAR(rental_date) != '2004' and YEAR(rental_date) != '2005')
;

SELECT * FROM rental
WHERE YEAR(rental_date) not IN (2004, 2005);
;

SELECT YEAR('2006-02-14 15:16:03');


-- 2005-06-14~16사이의 렌탈 정보 

SELECT * FROM rental
WHERE DATE(rental_date) BETWEEN '2005-06-14' AND '2005-06-16'
;

-- 고객 성이 'FA'와 'FR'사이에 속하는 사람이 알고 싶다
SELECT * FROM customer
WHERE last_name BETWEEN 'FA' AND 'FS'
;


-- 영화 등급이 g 또는 pg인 영화정보 알고싶다

SELECT *
FROM film
WHERE rating IN ('G', 'PG')
;


-- 제목에 PET이 포함된 영화와 같은 등급을 가진 영화가 궁금하다
SELECT * 
from film 
where rating IN (
	SELECT rating
	FROM film
	WHERE title LIKE '%PET%'
);


-- 등급이 'pg-13', 'r', 'nc-17'이 아닌 영화 정보 알고 싶다.

SELECT * 
from film 
WHERE rating NOT in ('PG-13', 'R', 'NC-17')
;

SELECT LEFT ('abcdefg', 2), RIGHT ('abcdefg', 2), MID('abcdefg', 1, 1);


-- 문자함수 이용하여 고객 성이 Q로 시작하는 사람 궁금하다

SELECT *
FROM customer
WHERE LEFT(last_name, 1) = 'Q';

SELECT *
FROM customer
WHERE last_name LIKE 'Q%';
;
